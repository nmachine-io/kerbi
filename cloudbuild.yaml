steps:

  - id: "Build base image"
    name: 'gcr.io/cloud-builders/docker'
    waitFor: []
    args:
      - "build"
      - "."
      - "-t"
      - "test-image:latest"

  - id: "Pull Kind Test Runner Image"
    name: 'gcr.io/cloud-builders/docker'
    waitFor: []
    args:
      - "pull"
      - "us-central1-docker.pkg.dev/nectar-bazaar/public/kind-test-runner:latest"

  - id: "Run Tests in kind cluster"
    name: 'gcr.io/cloud-builders/docker'
    waitFor:
      - "Build base image"
      - "Pull Kind Test Runner Image"
    args:
      - "run"
      - "-v"
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "--net=host"
      - "us-central1-docker.pkg.dev/nectar-bazaar/public/kind-test-runner:latest"

#  - id: 'Run tests and push coverage'
#    name: 'gcr.io/cloud-builders/docker'
#    waitFor:
#      - 'Build base image'
#      - 'Fetch Secrets'
#    entrypoint: 'bash'
#    args:
#      - '-c'
#      - 'docker run
#        --env CODECOV_TOKEN="$(cat kerbi-codecov-token.txt)"
#        --env VCS_COMMIT_ID="$COMMIT_SHA"
#        --env VCS_BRANCH_NAME="$BRANCH_NAME"
#        --env CI_BUILD_ID="$BUILD_ID"
#        --env CODECOV_TOKEN="$(cat kerbi-codecov-token.txt)"
#        kerbi test
#      '
#
#  - name: 'gcr.io/cloud-builders/docker'
#    id: 'Publish Gem'
#    entrypoint: 'bash'
#    waitFor:
#      - 'Run tests and push coverage'
#    args:
#      - '-c'
#      - 'docker run
#         --env RUBYGEMS_API_KEY=$(cat rubygems-api-key.txt)
#         kerbi publish
#         '